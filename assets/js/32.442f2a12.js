(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{423:function(s,t,a){"use strict";a.r(t);var r=a(17),v=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[s._v("#")]),s._v(" 安全")]),s._v(" "),a("h3",{attrs:{id:"你认为前端传输过程的参数需要加密吗-为什么-怎么加密更安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#你认为前端传输过程的参数需要加密吗-为什么-怎么加密更安全"}},[s._v("#")]),s._v(" 你认为前端传输过程的参数需要加密吗？为什么？怎么加密更安全？")]),s._v(" "),a("p",[s._v("看情况而定，常规的请求参数：搜索关键词，分页参数没有任何加密的必要。特殊的字段：身份证校验肯定是需要加密的。")]),s._v(" "),a("p",[s._v("同时前端游戏的数据也是必须要加密的，不仅仅需要加密还需要加签。")]),s._v(" "),a("h3",{attrs:{id:"能说一下你项目中遇到了哪些安全问题么-一般都是怎么解决的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#能说一下你项目中遇到了哪些安全问题么-一般都是怎么解决的"}},[s._v("#")]),s._v(" 能说一下你项目中遇到了哪些安全问题么，一般都是怎么解决的?")]),s._v(" "),a("p",[s._v("xss、csrf、爬虫、薅羊毛等安全问题")]),s._v(" "),a("ul",[a("li",[s._v("传输加密")]),s._v(" "),a("li",[s._v("接口加签")]),s._v(" "),a("li",[s._v("环境变量")]),s._v(" "),a("li",[s._v("token")]),s._v(" "),a("li",[s._v("输入校验")])]),s._v(" "),a("h3",{attrs:{id:"说说你对-xss-和-csrf-的理解-他们之间的区别是啥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说说你对-xss-和-csrf-的理解-他们之间的区别是啥"}},[s._v("#")]),s._v(" 说说你对 XSS 和 CSRF 的理解，他们之间的区别是啥?")]),s._v(" "),a("ul",[a("li",[s._v("xss 主要是控制好输入，cookie 设置 http-only")]),s._v(" "),a("li",[s._v("csrf 需要严格的 cookie 策略，增加 token 校验等")])]),s._v(" "),a("h3",{attrs:{id:"中间人攻击是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击是什么"}},[s._v("#")]),s._v(" 中间人攻击是什么?")]),s._v(" "),a("p",[s._v("中间人攻击是指攻击者与通讯的两端分别创建独立的联系，并交换其所收到的数据，使通讯的两端认为他们正在通过一个私密的连接与对方 直接对话，但事实上整个会话都被攻击者完全控制。")]),s._v(" "),a("h2",{attrs:{id:"csrf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[s._v("#")]),s._v(" CSRF")]),s._v(" "),a("h3",{attrs:{id:"什么是-csrf-攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-csrf-攻击"}},[s._v("#")]),s._v(" 什么是 CSRF 攻击")]),s._v(" "),a("p",[s._v("利用 WEB 的身份验证机制，可以保证请求是来自用户的浏览器，但不能保证请求是用户批准的。")]),s._v(" "),a("h3",{attrs:{id:"如何防御-csrf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何防御-csrf"}},[s._v("#")]),s._v(" 如何防御 CSRF")]),s._v(" "),a("p",[s._v("在服务端进行防御")]),s._v(" "),a("ul",[a("li",[s._v("Cookie Hashing，在所有表单都包含同一个伪随机数（前提是攻击者不能获得 cookie），然后服务器验证这随机数。")]),s._v(" "),a("li",[s._v("用户的 Cookie 很容易由于网站的 XSS 漏洞而被盗取")]),s._v(" "),a("li",[s._v("验证码")]),s._v(" "),a("li",[s._v("每次的用户提交都需要用户在表单中填写一个图片上的随机字符串")])]),s._v(" "),a("h3",{attrs:{id:"什么是-xss-攻击-如何避免"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-xss-攻击-如何避免"}},[s._v("#")]),s._v(" 什么是 XSS 攻击，如何避免")]),s._v(" "),a("p",[s._v("CSS (Cross Site Scripting)，跨站脚本攻击。")]),s._v(" "),a("p",[s._v("xss 主要是控制好输入，cookie 设置 http-only")])])}),[],!1,null,null,null);t.default=v.exports}}]);