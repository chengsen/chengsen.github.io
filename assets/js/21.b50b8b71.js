(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{412:function(t,e,s){"use strict";s.r(e);var v=s(17),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#举一些-es6-对-string-字符串类型做的常用升级优化"}},[t._v("举一些 ES6 对 String 字符串类型做的常用升级优化?")])])])]),s("p"),t._v(" "),s("h3",{attrs:{id:"举一些-es6-对-string-字符串类型做的常用升级优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举一些-es6-对-string-字符串类型做的常用升级优化"}},[t._v("#")]),t._v(" 举一些 ES6 对 String 字符串类型做的常用升级优化?")]),t._v(" "),s("p",[t._v("优化部分：")]),t._v(" "),s("p",[t._v("ES6 新增了字符串模板，在拼接大段字符串时，用反斜杠(`)取代以往的字符串相加的形式，能保留所有空格和换行，使得字符串拼接看起来更加直观，更加优雅。")]),t._v(" "),s("p",[t._v("升级部分:\nES6 在 String 原型上新增了 "),s("code",[t._v("includes()")]),t._v(" 方法，用于取代传统的只能用 "),s("code",[t._v("indexOf")]),t._v(" 查找包含字符的方法("),s("code",[t._v("indexOf")]),t._v(" 返回 "),s("code",[t._v("-1")]),t._v(" 表示没查到不如 "),s("code",[t._v("includes")]),t._v(" 方法返回 "),s("code",[t._v("false")]),t._v(" 更明确，语义更清晰)")]),t._v(" "),s("p",[t._v("此外还新增了 "),s("code",[t._v("startsWith()")]),t._v(", "),s("code",[t._v("endsWith()")]),t._v(", "),s("code",[t._v("padStart()")]),t._v(","),s("code",[t._v("padEnd()")]),t._v(", "),s("code",[t._v("repeat()")]),t._v(" 等方法，可方便的用于查找，补全字符串。")])])}),[],!1,null,null,null);e.default=_.exports}}]);