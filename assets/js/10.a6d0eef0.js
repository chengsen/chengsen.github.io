(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{402:function(t,e,s){"use strict";s.r(e);var r=s(17),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染"}},[t._v("#")]),t._v(" 渲染")]),t._v(" "),s("h3",{attrs:{id:"页面渲染-html-的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面渲染-html-的过程"}},[t._v("#")]),t._v(" 页面渲染 html 的过程？")]),t._v(" "),s("p",[t._v("浏览器渲染页面的一般过程：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("浏览器解析 html 源码，然后创建一个 DOM 树。")]),t._v(" 并行请求 css/image/js 在 DOM 树中，每一个 HTML 标签都有一个对应的节点，并且每一个文本也都会有一个对应的文本节点。DOM 树的根节点就是 documentElement，对应的是 html 标签。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("浏览器解析 CSS 代码，计算出最终的样式数据。")]),t._v(" 构建 CSSOM 树。对 CSS 代码中非法的语法它会直接忽略掉。解析 CSS 的时候会按照如下顺序来定义优先级：浏览器默认设置 < 用户设置 < 外链样式 < 内联样式 < html 中的 style。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("DOM Tree + CSSOM --\x3e 渲染树（rendering tree）")]),t._v("。渲染树和 DOM 树有点像，但是有区别的。")])])]),t._v(" "),s("p",[t._v("DOM 树完全和 html 标签一一对应，但是渲染树会忽略掉不需要渲染的元素，比如 head、display:none 的元素等。而且一大段文本中的每一个行在渲染树中都是独立的一个节点。渲染树中的每一个节点都存储有对应的 css 属性。")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("一旦渲染树创建好了，浏览器就可以根据渲染树直接把页面绘制到屏幕上。")])]),t._v(" "),s("p",[t._v("以上四个步骤并不是一次性顺序完成的。如果 DOM 或者 CSSOM 被修改，以上过程会被重复执行。")]),t._v(" "),s("p",[t._v("实际上，CSS 和 JavaScript 往往会多次修改 DOM 或者 CSSOM。")])])}),[],!1,null,null,null);e.default=a.exports}}]);